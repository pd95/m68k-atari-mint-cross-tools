include VARS

PACKAGE_NAME=binutils
VERSION=2.30
VERSIONPATCH=-mint-20180703
SOURCE_DIR=$(BUILD_DIR)/$(PACKAGE_NAME)-$(VERSION)
COMPIL_DIR=$(BUILD_DIR)/$(PACKAGE_NAME)-$(VERSION)$(VERSIONPATCH)-$(VERSIONBINCPU)
GIT_SRC=
ARCHIVE_SRC_FILE=$(PACKAGE_NAME)-$(VERSION).tar.bz2
ARCHIVE_PATCH_FILE=$(PACKAGE_NAME)-$(VERSION)$(VERSIONPATCH).patch.bz2
PACKAGE_FILE=$(PACKAGE_NAME)-$(VERSION)$(VERSIONPATCH)-$(VERSIONBINCPU)-$(VERSIONBUILD).tgz

BINARY_DIR=$(COMPIL_DIR)/binary-package
LOCAL_PREFIX_DIR=$(BINARY_DIR)$(PREFIX)

CFLAGS=-Wno-error=deprecated-declarations -Wno-error=null-pointer-arithmetic

##########################################
.PHONY: all clean extract patch configure compile packaging install

all:		extract patch configure compile packaging install

clean:	
ifeq "$(BUILD_DIR)" ""
	@echo "BUILD_DIR is not set" && exit 1
endif
	rm -rf "$(COMPIL_DIR)"
	rm -rf "$(SOURCE_DIR)"
	rm -rf "$(PACKAGES_DIR)/$(PACKAGE_FILE)"

##########################################
extract:	$(SOURCE_DIR)

patch:		$(SOURCE_DIR)/_patch_$(PACKAGE_NAME)

configure:	$(COMPIL_DIR)/Makefile

compile:
	make -j $(NUM_CPUS) CFLAGS="$(CFLAGS)" --directory="$(COMPIL_DIR)"

packaging:	$(PACKAGES_DIR)/$(PACKAGE_FILE)

install:	packaging
	tar xvzf "$(PACKAGES_DIR)/$(PACKAGE_FILE)" --directory $(dir $(PREFIX))

##########################################
# extract sources
$(SOURCE_DIR):
ifneq "$(ARCHIVE_SRC_FILE)" ""
	$(MAKE) FILE="$(ARCHIVE_SRC_FILE)" fetch
	tar xvjf "$(ARCHIVES_DIR)/$(ARCHIVE_SRC_FILE)" --directory "$(BUILD_DIR)"
endif
ifneq "$(GIT_SRC)" ""
	mkdir -p "$(dir $(SOURCE_DIR))"
	cd "$(dir $(SOURCE_DIR))"  && git clone $(GIT_SRC)
endif


# apply patch to sources
$(SOURCE_DIR)/_patch_$(PACKAGE_NAME):
ifneq "$(VERSIONPATCH)" ""
	$(MAKE) FILE="$(ARCHIVE_PATCH_FILE)" fetch
	bzcat "$(ARCHIVES_DIR)/$(ARCHIVE_PATCH_FILE)" | patch -p1 --directory $(SOURCE_DIR) && touch "$(SOURCE_DIR)/_patch_$(PACKAGE_NAME)"
endif


# configure package
$(COMPIL_DIR)/Makefile:	$(SOURCE_DIR)/_patch_$(PACKAGE_NAME)
	-mkdir $(dir $@)
	cd "$(dir $@)" && \
	CC="gcc -arch $(ARCH)" CXX="g++ -arch $(ARCH)" ../$(PACKAGE_NAME)-$(VERSION)/configure --target=m68k-atari-mint --prefix="$(PREFIX)" --disable-nls


# build distribution package
$(PACKAGES_DIR)/$(PACKAGE_FILE): $(COMPIL_DIR)/Makefile
	make   --directory="$(COMPIL_DIR)" install DESTDIR="$(BINARY_DIR)" 
	rm     "$(LOCAL_PREFIX_DIR)"/bin/m68k-atari-mint-readelf*
	rm -rf  "$(LOCAL_PREFIX_DIR)"/lib
	rm -r  "$(LOCAL_PREFIX_DIR)"/share/info
	rm     "$(LOCAL_PREFIX_DIR)"/share/man/man1/m68k-atari-mint-dlltool.1
	rm     "$(LOCAL_PREFIX_DIR)"/share/man/man1/m68k-atari-mint-nlmconv.1
	rm     "$(LOCAL_PREFIX_DIR)"/share/man/man1/m68k-atari-mint-readelf.1
	rm     "$(LOCAL_PREFIX_DIR)"/share/man/man1/m68k-atari-mint-windmc.1
	rm     "$(LOCAL_PREFIX_DIR)"/share/man/man1/m68k-atari-mint-windres.1
	strip  "$(LOCAL_PREFIX_DIR)"/bin/*
	gzip -9 "$(LOCAL_PREFIX_DIR)"/share/man/man1/*.1
	tar cvzf "$@" --directory "$(dir $(LOCAL_PREFIX_DIR))" $(notdir $(LOCAL_PREFIX_DIR)) 
	
